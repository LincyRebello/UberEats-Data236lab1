docker build -t backend:latest .
docker tag backend:latest leoncorreiasjsu/backend:latest
docker push leoncorreiasjsu/backend:latest

docker build -t frontend:latest .
docker tag frontend:latest leoncorreiasjsu/frontend:latest 
docker push leoncorreiasjsu/frontend:latest
-docker
docker run -d -p 8000:8000  backend:latest
docker run -d -p 3000:3000  frontent:latest

-docker-compose
docker-compose up -d mongodb
docker-compose up -d kafka
docker-compose up -d redis
docker-compose up -d backend
docker-compose up -d frontend

-kubernetes
minikube start
run below commands in kubernetes folder
kubectl apply -f mongo-pvc.yaml
kubectl apply -f mongo-app.yaml
kubectl apply -f redis-app.yaml
kubectl apply -f kafka-app.yaml
kubectl apply -f backend-app.yaml
kubectl apply -f frontend-app.yaml
minikube tunnel
to restart if u create a new docker image
kubectl rollout restart deployment backend
kubectl rollout restart deployment frontend


kubectl get pods
kubectl exec -it kafka-6fc8f449f6-ppz49 -- /bin/sh  #command for message flows
kubectl logs -f <pod-name>
also by container name
kubectl logs -f <pod-name> -c <container-name>

kafka-topics.sh --describe  --bootstrap-server kafka-service:9092
kafka-topics.sh --describe  --bootstrap-server kafka-service:9092 --topic orders
kafka-topics.sh --create --bootstrap-server kafka-service:9092 --replication-factor 1 --partitions 3 --topic orders

kafka-console-producer.sh --broker-list kafka-service:9092 --topic orders

kafka-console-producer.sh --broker-list kafka-service:9092 --topic kafka_orders2
kafka-console-consumer.sh --bootstrap-server kafka-service:9092 --topic orders --from-beginning #command for message flows

